<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='TOP N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='12'>
        <calculation class='tableau' formula='12' />
        <range max='30' min='1' />
      </column>
    </datasource>
    <datasource caption='covid_19_india1' inline='true' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india1' name='textscan.1hxn1hx1s1gbqw1fks0nn0ctgmuy'>
            <connection class='textscan' directory='F:/Desktop/data/covid_data_analysis' filename='covid_19_india1.csv' password='' server='' />
          </named-connection>
          <named-connection caption='covid_vaccine_statewise' name='textscan.0v4d9e50cqim7215bl0o31ewxyk8'>
            <connection class='textscan' directory='F:/Desktop/data/covid_data_analysis' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
          <named-connection caption='T_175A1D186D4C64E4181D3327A7AF06BA9' name='excel-direct.09t3e5l0k7bas919mdxce007dc34'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Desktop/data/covid_data_analysis/covid_19_india11.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='T_175A1D186D4C64E4181D3327A7AF06BA9 (1)' name='excel-direct.08hince0q86hdy1c2l89p0il2rxf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Desktop/data/covid_data_analysis/T_175A1D186D4C64E4181D3327A7AF06BA9 (1).XLSX' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0v4d9e50cqim7215bl0o31ewxyk8' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='TotalSamples' ordinal='2' />
            <column datatype='integer' name='Positive' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1hxn1hx1s1gbqw1fks0nn0ctgmuy' name='covid_19_india1.csv' table='[covid_19_india1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Sno' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='string' name='Time' ordinal='2' />
              <column datatype='string' name='State/UnionTerritory' ordinal='3' />
              <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
              <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
              <column datatype='integer' name='Cured' ordinal='6' />
              <column datatype='integer' name='Deaths' ordinal='7' />
              <column datatype='integer' name='Confirmed' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0v4d9e50cqim7215bl0o31ewxyk8' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='Updated On' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='integer' name='Total Doses Administered' ordinal='2' />
              <column datatype='integer' name='Total Sessions Conducted' ordinal='3' />
              <column datatype='integer' name='Total Sites ' ordinal='4' />
              <column datatype='integer' name='First Dose Administered' ordinal='5' />
              <column datatype='integer' name='Second Dose Administered' ordinal='6' />
              <column datatype='integer' name='Male(Individuals Vaccinated)' ordinal='7' />
              <column datatype='integer' name='Female(Individuals Vaccinated)' ordinal='8' />
              <column datatype='integer' name='Transgender(Individuals Vaccinated)' ordinal='9' />
              <column datatype='integer' name='Total Covaxin Administered' ordinal='10' />
              <column datatype='integer' name='Total CoviShield Administered' ordinal='11' />
              <column datatype='integer' name='Total Sputnik V Administered' ordinal='12' />
              <column datatype='integer' name='AEFI' ordinal='13' />
              <column datatype='integer' name='18-45 years (Age)' ordinal='14' />
              <column datatype='integer' name='45-60 years (Age)' ordinal='15' />
              <column datatype='integer' name='60+ years (Age)' ordinal='16' />
              <column datatype='integer' name='Total Individuals Vaccinated' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0v4d9e50cqim7215bl0o31ewxyk8' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='integer' name='TotalSamples' ordinal='2' />
              <column datatype='integer' name='Positive' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[18-45 years (Age)]' value='[covid_vaccine_statewise.csv].[18-45 years (Age)]' />
          <map key='[45-60 years (Age)]' value='[covid_vaccine_statewise.csv].[45-60 years (Age)]' />
          <map key='[60+ years (Age)]' value='[covid_vaccine_statewise.csv].[60+ years (Age)]' />
          <map key='[AEFI]' value='[covid_vaccine_statewise.csv].[AEFI]' />
          <map key='[ConfirmedForeignNational]' value='[covid_19_india1.csv].[ConfirmedForeignNational]' />
          <map key='[ConfirmedIndianNational]' value='[covid_19_india1.csv].[ConfirmedIndianNational]' />
          <map key='[Confirmed]' value='[covid_19_india1.csv].[Confirmed]' />
          <map key='[Cured]' value='[covid_19_india1.csv].[Cured]' />
          <map key='[Date (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[Date]' />
          <map key='[Date]' value='[covid_19_india1.csv].[Date]' />
          <map key='[Deaths]' value='[covid_19_india1.csv].[Deaths]' />
          <map key='[Female(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[Female(Individuals Vaccinated)]' />
          <map key='[First Dose Administered]' value='[covid_vaccine_statewise.csv].[First Dose Administered]' />
          <map key='[Male(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[Male(Individuals Vaccinated)]' />
          <map key='[Positive]' value='[StatewiseTestingDetails.csv].[Positive]' />
          <map key='[Second Dose Administered]' value='[covid_vaccine_statewise.csv].[Second Dose Administered]' />
          <map key='[Sno]' value='[covid_19_india1.csv].[Sno]' />
          <map key='[State (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[State]' />
          <map key='[State/UnionTerritory]' value='[covid_19_india1.csv].[State/UnionTerritory]' />
          <map key='[State]' value='[covid_vaccine_statewise.csv].[State]' />
          <map key='[Time]' value='[covid_19_india1.csv].[Time]' />
          <map key='[Total Covaxin Administered]' value='[covid_vaccine_statewise.csv].[Total Covaxin Administered]' />
          <map key='[Total CoviShield Administered]' value='[covid_vaccine_statewise.csv].[Total CoviShield Administered]' />
          <map key='[Total Doses Administered]' value='[covid_vaccine_statewise.csv].[Total Doses Administered]' />
          <map key='[Total Individuals Vaccinated]' value='[covid_vaccine_statewise.csv].[Total Individuals Vaccinated]' />
          <map key='[Total Sessions Conducted]' value='[covid_vaccine_statewise.csv].[Total Sessions Conducted]' />
          <map key='[Total Sites ]' value='[covid_vaccine_statewise.csv].[Total Sites ]' />
          <map key='[Total Sputnik V Administered]' value='[covid_vaccine_statewise.csv].[Total Sputnik V Administered]' />
          <map key='[TotalSamples]' value='[StatewiseTestingDetails.csv].[TotalSamples]' />
          <map key='[Transgender(Individuals Vaccinated)]' value='[covid_vaccine_statewise.csv].[Transgender(Individuals Vaccinated)]' />
          <map key='[Updated On]' value='[covid_vaccine_statewise.csv].[Updated On]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india1.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Updated On</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Updated On]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Updated On</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Doses Administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Doses Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Doses Administered</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sessions Conducted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Sessions Conducted]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Sessions Conducted</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sites </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Sites ]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Sites </remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Dose Administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[First Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>First Dose Administered</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second Dose Administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Second Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Second Dose Administered</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male(Individuals Vaccinated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Male(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male(Individuals Vaccinated)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female(Individuals Vaccinated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Female(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female(Individuals Vaccinated)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender(Individuals Vaccinated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transgender(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender(Individuals Vaccinated)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Covaxin Administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Covaxin Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Covaxin Administered</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total CoviShield Administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total CoviShield Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total CoviShield Administered</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sputnik V Administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Sputnik V Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Sputnik V Administered</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AEFI</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AEFI]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>AEFI</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-45 years (Age)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[18-45 years (Age)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-45 years (Age)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 years (Age)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[45-60 years (Age)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 years (Age)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ years (Age)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[60+ years (Age)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ years (Age)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Individuals Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Individuals Vaccinated]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Individuals Vaccinated</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalSamples]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aefi' datatype='integer' name='[AEFI]' role='measure' type='quantitative' />
      <column caption='Vaccination Percentage' datatype='real' name='[Calculation_618119063256788994]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total Individuals Vaccinated]/[Population]' />
      </column>
      <column caption='Percentage AEFI' datatype='real' name='[Calculation_618119063257767939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([AEFI]/[Total Doses Administered])*100' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State (StatewiseTestingDetails.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Total Covaxin Administered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total CoviShield Administered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Individuals Vaccinated]' role='measure' type='quantitative' />
      <column caption='Total Sites' datatype='integer' name='[Total Sites ]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Sputnik V Administered]' role='measure' type='quantitative' />
      <column caption='Total Samples' datatype='integer' name='[TotalSamples]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='StatewiseTestingDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india1.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_vaccine_statewise.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE]' role='measure' type='quantitative' />
      <column-instance column='[State Set]' derivation='InOut' name='[io:State Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Covaxin Administered]' derivation='Sum' name='[sum:Total Covaxin Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total CoviShield Administered]' derivation='Sum' name='[sum:Total CoviShield Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Individuals Vaccinated]' derivation='Sum' name='[sum:Total Individuals Vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sputnik V Administered]' derivation='Sum' name='[sum:Total Sputnik V Administered:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (State/UnionTerritory,State)' hidden='true' name='[Action (State/UnionTerritory,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State/UnionTerritory]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='State Set' name='[State Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[State]' member='&quot;Tamil Nadu&quot;' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:State Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Individuals Vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Sputnik V Administered:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Cured:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='StatewiseTestingDetails.csv' id='StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2'>
            <properties context=''>
              <relation connection='textscan.0v4d9e50cqim7215bl0o31ewxyk8' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='integer' name='TotalSamples' ordinal='2' />
                  <column datatype='integer' name='Positive' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid_19_india1.csv' id='covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946'>
            <properties context=''>
              <relation connection='textscan.1hxn1hx1s1gbqw1fks0nn0ctgmuy' name='covid_19_india1.csv' table='[covid_19_india1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid_vaccine_statewise.csv' id='covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE'>
            <properties context=''>
              <relation connection='textscan.0v4d9e50cqim7215bl0o31ewxyk8' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Updated On' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='integer' name='Total Doses Administered' ordinal='2' />
                  <column datatype='integer' name='Total Sessions Conducted' ordinal='3' />
                  <column datatype='integer' name='Total Sites ' ordinal='4' />
                  <column datatype='integer' name='First Dose Administered' ordinal='5' />
                  <column datatype='integer' name='Second Dose Administered' ordinal='6' />
                  <column datatype='integer' name='Male(Individuals Vaccinated)' ordinal='7' />
                  <column datatype='integer' name='Female(Individuals Vaccinated)' ordinal='8' />
                  <column datatype='integer' name='Transgender(Individuals Vaccinated)' ordinal='9' />
                  <column datatype='integer' name='Total Covaxin Administered' ordinal='10' />
                  <column datatype='integer' name='Total CoviShield Administered' ordinal='11' />
                  <column datatype='integer' name='Total Sputnik V Administered' ordinal='12' />
                  <column datatype='integer' name='AEFI' ordinal='13' />
                  <column datatype='integer' name='18-45 years (Age)' ordinal='14' />
                  <column datatype='integer' name='45-60 years (Age)' ordinal='15' />
                  <column datatype='integer' name='60+ years (Age)' ordinal='16' />
                  <column datatype='integer' name='Total Individuals Vaccinated' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Updated On]' />
                <expression op='[Date (StatewiseTestingDetails.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[State]' />
                <expression op='[State (StatewiseTestingDetails.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE' />
            <second-end-point object-id='StatewiseTestingDetails.csv_D8D271AEFA0C4D188AF294696B64F2A2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Updated On]' />
            </expression>
            <first-end-point object-id='covid_19_india1.csv_47B906BE405A47FFADC1C68318F71946' />
            <second-end-point object-id='covid_vaccine_statewise.csv_D73D9E6B361D4DE28C9A06D9EBDE57FE' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cases Vs Vaccination'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total Individuals Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Attribute' name='[attr:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Individuals Vaccinated]' derivation='Sum' name='[sum:Total Individuals Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[attr:Confirmed:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[attr:Confirmed:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Individuals Vaccinated:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Individuals Vaccinated:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' value='56' />
            <format attr='width' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Individuals Vaccinated:qk]' value='56' />
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Individuals Vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk] + [federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Individuals Vaccinated:qk])</rows>
        <cols>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{EAADE8AE-7FD0-400C-8006-15965CD8DC55}' />
    </worksheet>
    <worksheet name='Cases and Vaccination State-wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>State-Wise Vaccination and Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Doses Administered]' derivation='Sum' name='[sum:Total Doses Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' context='true'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Latitude (generated)]' field-type='quantitative' fold='true' max='5794973.9442664906' min='-203756.96128808329' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Longitude (generated)]' field-type='quantitative' max='10786000.616509799' min='7207810.3565605655' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Latitude (generated)]' field-type='quantitative' max='5794973.9442664906' min='-203756.96128808329' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' value='#fabfd2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' value='#e9f0f1' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='Vaccination' />
            <format attr='size' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' value='Covid-19 Cases' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' />
              <lod column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' />
              <geometry column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' />
              <lod column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State/UnionTerritory:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Latitude (generated)] + [federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Latitude (generated)])</rows>
        <cols>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A1170E6B-EE9B-4537-89BD-537EE5580510}' />
    </worksheet>
    <worksheet name='Covaxin-Covishield State-wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Covaxin Administered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total CoviShield Administered]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Covaxin Administered]' derivation='Sum' name='[sum:Total Covaxin Administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total CoviShield Administered]' derivation='Sum' name='[sum:Total CoviShield Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' context='true'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]</column>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]</column>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Multiple Values]' scope='rows' value='' />
            <format attr='height' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' value='27' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' value='83' />
            <format attr='text-format' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
            <format attr='font-weight' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]' value='normal' />
            <format attr='text-format' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
            <format attr='text-align' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]' value='right' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' value='right' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[Multiple Values]</rows>
        <cols>([federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk] / [federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{94A483F8-86A4-454F-95B3-3843F63A1779}' />
    </worksheet>
    <worksheet name='Covishield or Covaxin'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='integer' name='[Total Covaxin Administered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total CoviShield Administered]' role='measure' type='quantitative' />
            <column datatype='date' name='[Updated On]' role='dimension' type='ordinal' />
            <column-instance column='[Total Covaxin Administered]' derivation='Sum' name='[sum:Total Covaxin Administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total CoviShield Administered]' derivation='Sum' name='[sum:Total CoviShield Administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Updated On]' derivation='Day-Trunc' name='[tdy:Updated On:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]' field-type='quantitative' fold='true' major-origin='0' major-show='false' major-spacing='100000000' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]' field-type='quantitative' major-origin='0' major-show='false' major-spacing='100000000' scope='rows' type='space' />
            <format attr='width' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]' value='10' />
            <format attr='width' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]' value='10' />
            <format attr='title' class='0' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[tdy:Updated On:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total CoviShield Administered:qk] + [federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Covaxin Administered:qk])</rows>
        <cols>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[tdy:Updated On:qk]</cols>
      </table>
      <simple-id uuid='{0F08C871-8810-42BB-8E4C-17B3CF2579CE}' />
    </worksheet>
    <worksheet name='Side-Effects State-Wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Side-Effects Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column caption='Aefi' datatype='integer' name='[AEFI]' role='measure' type='quantitative' />
            <column caption='Percentage AEFI' datatype='real' name='[Calculation_618119063257767939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([AEFI]/[Total Doses Administered])*100' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_618119063257767939]' derivation='Sum' name='[sum:Calculation_618119063257767939:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Calculation_618119063257767939:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Calculation_618119063257767939:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percentage AEFI:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Calculation_618119063257767939:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Calculation_618119063257767939:qk]</rows>
        <cols>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{D2CF2577-EF94-48E7-B9DF-70989B772463}' />
    </worksheet>
    <worksheet name='State-Wise Vaccination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>State-Wise Vaccination</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TOP N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='12'>
              <calculation class='tableau' formula='12' />
              <range max='30' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column-instance column='[State Set]' derivation='InOut' name='[io:State Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Doses Administered]' derivation='Sum' name='[sum:Total Doses Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' context='true'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Total Doses Administered])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:State:nk]' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;India&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='53' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
            <format attr='vertical-align' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='bottom' />
            <format attr='text-align' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='center' />
            <format attr='color' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[io:State Set:nk]' value='false' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='TOP N'>
              <formatted-text>
                <run>TOP N</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[io:State Set:nk]' />
              <text column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[none:State:nk]</rows>
        <cols>[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]</cols>
      </table>
      <simple-id uuid='{EE6E4611-C96F-42FA-A025-60DAA2C7BF28}' />
    </worksheet>
    <worksheet name='Total Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontsize='15'>Total Covid-19 Cases</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontsize='15'><![CDATA[<[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5B2D336F-8DB5-42EE-A5DE-81BD99344041}' />
    </worksheet>
    <worksheet name='Total Doses'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india1' name='federated.1tvs71c0pl5ny617ou8uo1rhy96g' />
          </datasources>
          <datasource-dependencies datasource='federated.1tvs71c0pl5ny617ou8uo1rhy96g'>
            <column datatype='integer' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column-instance column='[Total Doses Administered]' derivation='Sum' name='[sum:Total Doses Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontsize='15'>Total Doses Administered</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontsize='15'><![CDATA[<[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3190EB27-8A57-44C3-940A-094A3A62DA97}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid-19 India'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#555555' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='46125' id='3' name='Cases Vs Vaccination' show-title='false' w='52700' x='46100' y='12375' />
        <zone h='85625' id='7' name='Cases and Vaccination State-wise' show-title='false' w='40900' x='2000' y='12500' />
        <zone h='7500' id='8' name='Cases and Vaccination State-wise' pane-specification-id='1' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' type-v2='color' w='15600' x='25700' y='15750' />
        <zone h='17250' id='9' name='Cases and Vaccination State-wise' pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' type-v2='size' w='14900' x='25700' y='24500' />
        <zone h='7125' id='10' name='Total Cases' show-title='false' w='22000' x='1900' y='1250' />
        <zone h='8500' id='11' name='Total Doses' show-title='false' w='26700' x='71500' y='1500' />
        <zone h='6500' id='14' name='Cases Vs Vaccination' pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' show-title='false' type-v2='color' w='18600' x='52900' y='13875' />
        <zone forceUpdate='true' h='7000' id='15' type-v2='text' w='41400' x='27100' y='2125'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Calibri' fontsize='25'>Covid-19 Cases &amp; Vaccination</run>
          </formatted-text>
        </zone>
        <zone h='39000' id='16' name='Covaxin-Covishield State-wise' show-title='false' w='52200' x='46200' y='60000' />
        <zone h='7250' id='17' name='Covaxin-Covishield State-wise' pane-specification-id='0' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' type-v2='color' w='19700' x='74500' y='67125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='57' h='7125' id='10' is-fixed='true' name='Total Cases' show-title='false' w='22000' x='1900' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='8500' id='11' is-fixed='true' name='Total Doses' show-title='false' w='26700' x='71500' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7000' id='15' type-v2='text' w='41400' x='27100' y='2125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Calibri' fontsize='25'>Covid-19 Cases &amp; Vaccination</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46125' id='3' is-fixed='true' name='Cases Vs Vaccination' show-title='false' w='52700' x='46100' y='12375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='14' name='Cases Vs Vaccination' pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' show-title='false' type-v2='color' w='18600' x='52900' y='13875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85625' id='7' is-fixed='true' name='Cases and Vaccination State-wise' show-title='false' w='40900' x='2000' y='12500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='8' name='Cases and Vaccination State-wise' pane-specification-id='1' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' type-v2='color' w='15600' x='25700' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17250' id='9' name='Cases and Vaccination State-wise' pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' type-v2='size' w='14900' x='25700' y='24500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39000' id='16' is-fixed='true' name='Covaxin-Covishield State-wise' show-title='false' w='52200' x='46200' y='60000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='17' name='Covaxin-Covishield State-wise' pane-specification-id='0' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' type-v2='color' w='19700' x='74500' y='67125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{00E8E331-1C57-41FC-8114-A1C583413C32}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Cases Vs Vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F2A6847D-5260-429F-8DF8-0E1A9B7BF7BE}' />
    </window>
    <window class='worksheet' name='Covishield or Covaxin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AF8DCAEA-B9F4-4B61-B552-4AC414560EFC}' />
    </window>
    <window class='worksheet' name='State-Wise Vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[io:State Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <simple-id uuid='{27E5E07C-9F5A-436D-B765-412FA4779073}' />
    </window>
    <window class='worksheet' name='Cases and Vaccination State-wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Total Doses Administered:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' type='size'>
          <bucket-selection />
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EA0C8C1F-5698-462A-9719-3899DF2FACF9}' />
    </window>
    <window class='worksheet' name='Side-Effects State-Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C85298C5-96D4-49F1-AAF8-D41F343227B0}' />
    </window>
    <window class='worksheet' name='Covaxin-Covishield State-wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='marks' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <simple-id uuid='{F2591929-A525-469F-835F-BC339E98DE74}' />
    </window>
    <window class='worksheet' name='Total Doses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BEF6EC38-A7C0-4305-81ED-EA50DC4135F1}' />
    </window>
    <window class='worksheet' name='Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{80CDE818-DC1B-4ACB-840D-22415F042CE9}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid-19 India'>
      <viewpoints>
        <viewpoint name='Cases Vs Vaccination'>
          <zoom type='entire-view' />
          <highlight field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Cases and Vaccination State-wise'>
          <zoom type='entire-view' />
          <highlight field='[federated.1tvs71c0pl5ny617ou8uo1rhy96g].[sum:Confirmed:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Covaxin-Covishield State-wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Cases' />
        <viewpoint name='Total Doses' />
      </viewpoints>
      <active id='3' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{1044CDD4-B0F3-4A8E-9951-56B037548A89}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases Vs Vaccination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cases and Vaccination State-wise' width='192'>
      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
      s9AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covaxin-Covishield State-wise' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid-19 India' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covishield or Covaxin' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUc0lEQVR4nO3daWwc533H8e8cO3tzeUikJOqgrMiWrbg+Yqs+aycFktqp4zZNgQIBggZp
      3rRA2iRtkhZG67Y5nCBXgzpI4ARNmqMF0rpI06BxHNtqHMeHfOiwLMkSxZuUeC333jmfvhjq
      oA6KlMRdivP/AIK45M48z8w+v7n2mWc0pZRCiIjSm10BIZpJAiAizTz9xczMDI7jnHztOA6W
      ZTW8UkI0ijbfOcD4+DidnZ2NrI8QDSWHQCLSJAAi0iQAItIkACLSJAAi0iQAItIkACLSJAAi
      0iQAItIkACLSJAAi0iQAItIkACLSzPn+qJSa0z1aiJVm3gBomib3A4gVTQ6BRKRJAESkSQBE
      pEkARKRJAESkSQBEpEkARKRJAESkSQBEpEkARKRJAESkSQBEpEkARKRJAESkSQBEpEkARKRJ
      AESkSQBEpEkARKRJAESkSQBEpEkARKRJAESkzTsuEIDneY2ohxBNccEAaJrWiHoI0RQXDIBh
      GI2ohxBNIecAItIkACLSJAAi0iQAItIkACLSJAAi0iQAItIkACLSJAAi0iQAItIkACLSJAAi
      0iQAItIkACLSJAAi0iQAItIkACLSJAAi0iQAItIkACLSJAAi0iQAItIkACLSLjgukO/7jaiH
      EE0hewARaTIynIg02QOISJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISJMA
      iEiTAIhIkwCISJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISLvgsChKqUbU
      Q4immDcASik8z2tUXYRouHkDoGkasVisUXURouHkHEBEmgRARJoEQESaBEBEmgRARJoEQESa
      BEBEmgRARJoEQETaBfsCCbHSKKXAdwjGD0gARLQot4Z3+EmcXY8RlMYlACI6guIY9af/EX/k
      VaxbP4S5+R4JgFj5lArw+5+j/sxn0VvWkfqjH6K3b0bTNAmAWNlU4OHu+0/sX32Z2PbfJ37n
      n6PFkif/LgEQK5JSCjUziP3SN/H7nyNx799gXvu7aPrc515LAMSKo1SAu//HOL/6CnrHFpIP
      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
      AbpHArj3dGK/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Side-Effects State-Wise' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State-Wise Vaccination' width='192'>
      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
    </thumbnail>
    <thumbnail height='60' name='Total Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='60' name='Total Doses' width='192'>
      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
      ujCTdI/u22vC1EEUJhkx0vL7Yudq6HgjsXvt1n09XSPXkSZ072RQDUyOX9i1nKb9jdmFXNzz
      tFkul5uf3nPR8cTVQ+aEqXKzXD7NvCi93Fx/22w23643l6cvMk+Ty83yqQnmQ1c7q91o1m+K
      MMvlcrM84g/mPeX15ttms9lsvm2uL99j/kOE3CyXy80Rm/Rmo7MqtGst16/V9s5QK+3bqzWv
      n/Fb85o9+ebPLzWam1qUuW3++1c6s2rRNLNcLjdPXX7M/H1nAlzSbh30i6vlXt1vXiyXm+Vh
      aeZSp53QDi7ul+5wd3x0RAwrVxbx+w1n+GxHApEOqS69CVq5EsfZsp6s56LYXGE/XUuQJ72N
      8os41FVnUCdEtsmvKfVfgipR3hLX1WbEEdPeSyqaZISW7RnL78VaIoL25HYf042z5KlXktc2
      AajV5CBWLp1lN1M5kdvtdusurpRromz3dioAP8WCDkf/7vdL33HX3gYdHa1i347lRNrySVpz
      ei7fsQ9VdCsr64vIrwCkU5jza7tzEl8UuzTsWB5JwAi7PJwjLHkwNbviGd+b+MeZ3G4RzIqD
      KpRxMwi4z2YrgAde9wUQqVRxJFeNg8kdyO1Wu3UXV8qtz+Z/DhlAFkX83B/Qj+Xe9TmnC1Sn
      P2mWy8PMfyr4uyj3X1DuQGLgLVNMZRzOqsM76nVWhN/FJ4iiXLdkwDlAU8EhcqRP8ZbTtN6i
      3B+y3IHG/wORWtsGGHXT6gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
